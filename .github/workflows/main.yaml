name: Build and Deploy

on:
  push:
    branches:
      - develop
      - project-refactor
##
jobs:
  calculate_new_tag:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.set_tag.outputs.NEW_TAG }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Ensure all tags are fetched

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 14

      - name: Calculate new tag
        id: set_tag
        run: |
          LAST_TAG=$(git describe --abbrev=0 --tags)
          export MAJOR=$(echo $LAST_TAG | awk -F'.' '{print $1}')
          export MINOR=$(echo $LAST_TAG | awk -F'.' '{print $2}')
          export PATCH=$(echo $LAST_TAG | awk -F'.' '{print $3}' | awk -F'-' '{print $1}')
          export BRANCH_NAME=$(git rev-parse --abbrev-ref HEAD | tr '/' '-') # Convert slashes to dashes if present
          export NEXT_PATCH=$((PATCH + 1))
          export NEW_TAG="$MAJOR.$MINOR.$NEXT_PATCH-$BRANCH_NAME"
          echo "new tag is: $NEW_TAG"
          echo "NEW_TAG=$NEW_TAG" >> $GITHUB_OUTPUT         
          
  tag_the_commit:
    needs: calculate_new_tag
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.SECRET_GITHUB_TOKEN }}
          custom_tag: ${{ needs.calculate_new_tag.outputs.tag }}
          #custom_tag: 1.0.46.1-even-v2
          tag_prefix: ""

  build_and_push_image:
    needs: calculate_new_tag
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Ensure all tags are fetched
        
      - name: Docker login
        uses: docker/login-action@v3
        with:
          registry: harbor.getapp.sh
          username: "${{ secrets.REGISTRY_USERNAME }}"
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build image and push to Docker Hub and GitHub Container Registry
        uses: docker/build-push-action@v5
        with:
          # path to the Dockerfile
          file: Dockerfile-cts
          context: .
          tags: ${{ secrets.REGISTRY_URL }}/getapp-dev/upload:${{ needs.calculate_new_tag.outputs.tag }}
          push: true
          build-args: IMG_TAG=${{ needs.calculate_new_tag.outputs.tag }}

  upload-to-server:
    needs: 
      - build_and_push_image
      - calculate_new_tag

    runs-on: ubuntu-latest
    env:
      NEW_VERSION: ${{needs.calculate_new_tag.outputs.tag}}
      IMAGE_URL: ${{ secrets.REGISTRY_URL }}/getapp-dev/upload:${{ needs.calculate_new_tag.outputs.tag }}

    steps:
      - name: Print Version from GitHub environment
        run: |
          echo "New version: $NEW_VERSION"
          echo "Image registry url: $IMAGE_URL"

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install CLI tool
        run: npm i -g git+https://github.com/getappsh/cli.git

      - name: Verify installation
        run: gac -V

      - name: Create manifest file
        run: |
          echo '{
            "product": "merkava",
            "name": "GetApp-Upload",
            "version":"'"$NEW_VERSION"'",
            "agentTags": "Tags of possible agent",
            "prevVersion": "0.1.0",
            "formation": "yatush",
            "baseVersion": "0.1.0",
            "installType": "None",
            "registryUrl": "'"$IMAGE_URL"'",
            "assetType": "docker_image",
            "properties": {
              "releaseNotes": "Release of the GetApp Upload docker image"
            }
          }' > manifest.json

      - name: Upload build artifacts
        run: |
          gac upload manifest.json "empty/for/now"  ${{ secrets.UPLOAD_TOKEN }}
          echo $?
        env:
          BASE_PATH: ${{ secrets.BASE_PATH }}  # Example: Use GitHub secrets for sensitive data
          UPLOAD_TOKEN: ${{ secrets.UPLOAD_TOKEN }}  # Add the secret token here
